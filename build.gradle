plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

springBoot {
    mainClass = 'com.example.BootStrapApplication'
}

//모든 프로젝트에 적용
allprojects {
    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    repositories {
        mavenCentral()
    }

}
subprojects {
    apply {
        plugin 'java'
        plugin 'org.springframework.boot'
        plugin 'io.spring.dependency-management'
    }

    tasks.withType(JavaCompile).configureEach {
        println(" -parameters 설정됨 in project: ${project.name}")
        options.compilerArgs += ["-parameters"]
    }

    tasks.bootJar {
        enabled = false
    }

    jar {
        enabled = true
    }

    dependencies {
        //webclient
        implementation 'org.springframework.boot:spring-boot-starter-webflux'
        implementation 'io.github.resilience4j:resilience4j-spring-boot3:2.2.0'
        implementation("org.springframework.boot:spring-boot-starter-actuator")
        implementation("io.micrometer:micrometer-registry-prometheus")
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    String type = project.findProperty('type') ?: ''

    if (type.contains('jpa')) {
        dependencies {
            implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
        }
    } else if (type.contains('mvc')) {
        dependencies {
            implementation 'org.springframework.boot:spring-boot-starter-web'
            implementation 'org.springframework.boot:spring-boot-starter-validation'
        }
    } else if (type.contains('core')) {
        dependencies {
            implementation 'org.springframework.boot:spring-boot-starter'
        }
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}