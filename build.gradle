plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.7'
    id 'io.spring.dependency-management' version '1.1.7'
}
//메인 메서드 설정.
springBoot {
    mainClass = 'com.example.bootstrap.BootStrapApplication.class'
}

//모든 프로젝트에 적용
allprojects {
    group = 'com.example'
    version = '0.0.1-SNAPSHOT'

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
    }

    repositories {
        mavenCentral()
    }
}
//서브 모듈
subprojects {
    apply {
        plugin 'java'
        plugin 'org.springframework.boot'
        plugin 'io.spring.dependency-management'
    }

    dependencies {
        implementation 'org.springframework.boot:spring-boot-starter'
        implementation 'org.springframework.boot:spring-boot-starter-web'
        // validation
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
        testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

        // lombok
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        testAnnotationProcessor 'org.projectlombok:lombok'
        testCompileOnly 'org.projectlombok:lombok'
    }

    tasks.named('test') {
        useJUnitPlatform()
    }
}
//서브 모듈에 전부 common을 적용하기.
configure(subprojects.findAll {it.name != 'common'}) {
    dependencies {
        //querydsl 설정 추가
        implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
        implementation 'com.querydsl:querydsl-apt:5.0.0:jakarta'
        implementation "com.querydsl:querydsl-core"
        implementation "com.querydsl:querydsl-collections"

        annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
        annotationProcessor "jakarta.annotation:jakarta.annotation-api"
        annotationProcessor "jakarta.persistence:jakarta.persistence-api"

        implementation 'org.springframework.boot:spring-boot-starter-security'
        implementation 'org.springframework.boot:spring-boot-starter-validation'
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.projectlombok:lombok'
        // test -> testcontainer 추가하기.
        testImplementation 'org.junit.jupiter:junit-jupiter-api'
        testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    }

    test {
        useJUnitPlatform()
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}
